
/**
 *  Generated by mxmlc 4.0
 *
 *  Package:    
 *  Class:      vUpload
 *  Source:     F:\workspaceF4\UploadSample\source\vUpload.mxml
 *  Template:   flex2/compiler/mxml/gen/ClassDef.vm
 *  Time:       2009.12.02 11:23:00 CST
 */

package 
{

import flash.accessibility.*;
import flash.debugger.*;
import flash.display.*;
import flash.errors.*;
import flash.events.*;
import flash.events.MouseEvent;
import flash.external.*;
import flash.filters.*;
import flash.geom.*;
import flash.media.*;
import flash.net.*;
import flash.printing.*;
import flash.profiler.*;
import flash.system.*;
import flash.text.*;
import flash.ui.*;
import flash.utils.*;
import flash.xml.*;
import mx.binding.*;
import mx.binding.IBindingClient;
import mx.containers.HBox;
import mx.containers.Panel;
import mx.controls.Button;
import mx.controls.ProgressBar;
import mx.controls.Text;
import mx.core.Application;
import mx.core.ClassFactory;
import mx.core.DeferredInstanceFromClass;
import mx.core.DeferredInstanceFromFunction;
import mx.core.IDeferredInstance;
import mx.core.IFactory;
import mx.core.IPropertyChangeNotifier;
import mx.core.UIComponentDescriptor;
import mx.core.mx_internal;
import mx.styles.*;


[SWF( height='150', width='400')]
[Frame(extraClass="_vUpload_FlexInit")]

[Frame(factoryClass="_vUpload_mx_managers_SystemManager")]


public class vUpload
    extends mx.core.Application
    implements mx.binding.IBindingClient
{

    [Bindable]
	/**
 * @private
 **/
    public var bBrowse : mx.controls.Button;

    [Bindable]
	/**
 * @private
 **/
    public var bFileInfo : mx.controls.Text;

    [Bindable]
	/**
 * @private
 **/
    public var bProgress : mx.controls.ProgressBar;

    [Bindable]
	/**
 * @private
 **/
    public var bUpload : mx.controls.Button;

    [Bindable]
	/**
 * @private
 **/
    public var hbxInfo : mx.containers.HBox;

    [Bindable]
	/**
 * @private
 **/
    public var hbxSelect : mx.containers.HBox;

    [Bindable]
	/**
 * @private
 **/
    public var panel : mx.containers.Panel;




private var _documentDescriptor_ : mx.core.UIComponentDescriptor = 
new mx.core.UIComponentDescriptor({
  type: mx.core.Application
  ,
  propertiesFactory: function():Object { return {
    height: 150,
    width: 400,
    childDescriptors: [
      new mx.core.UIComponentDescriptor({
        type: mx.containers.Panel
        ,
        id: "panel"
        ,
        stylesFactory: function():void {
          this.headerHeight = 0;
          this.verticalAlign = "middle";
          this.paddingTop = 0;
          this.paddingLeft = 0;
          this.paddingRight = 0;
          this.paddingBottom = 0;
          this.borderThicknessLeft = 0;
          this.borderThicknessRight = 0;
          this.borderThicknessTop = 0;
          this.borderThicknessBottom = 0;
          this.backgroundAlpha = 1.0;
          this.dropShadowEnabled = false;
        }
        ,
        propertiesFactory: function():Object { return {
          id: "panel",
          percentWidth: 100.0,
          percentHeight: 100.0,
          layout: "vertical",
          childDescriptors: [
            new mx.core.UIComponentDescriptor({
              type: mx.containers.HBox
              ,
              stylesFactory: function():void {
                this.paddingBottom = 0;
              }
              ,
              propertiesFactory: function():Object { return {
                percentWidth: 100.0,
                height: 20
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.HBox
              ,
              id: "hbxSelect"
              ,
              stylesFactory: function():void {
                this.paddingBottom = 0;
              }
              ,
              propertiesFactory: function():Object { return {
                id: "hbxSelect",
                percentWidth: 100.0,
                height: 40,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    id: "bBrowse"
                    ,
                    events: {
                      click: "__bBrowse_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      id: "bBrowse",
                      label: "选择视频文件..",
                      width: 120,
                      percentHeight: 90.0,
                      enabled: false
                    }}
                  })
                ,
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Button
                    ,
                    id: "bUpload"
                    ,
                    events: {
                      click: "__bUpload_click"
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      id: "bUpload",
                      label: "上传",
                      width: 80,
                      percentHeight: 90.0,
                      enabled: false
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.HBox
              ,
              propertiesFactory: function():Object { return {
                height: 10,
                percentWidth: 100.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.ProgressBar
                    ,
                    id: "bProgress"
                    ,
                    stylesFactory: function():void {
                      this.themeColor = 15863162;
                      this.textAlign = "center";
                    }
                    ,
                    propertiesFactory: function():Object { return {
                      id: "bProgress",
                      height: 5,
                      percentWidth: 90.0,
                      direction: "right",
                      labelPlacement: "right",
                      mode: "manual",
                      visible: false
                    }}
                  })
                ]
              }}
            })
          ,
            new mx.core.UIComponentDescriptor({
              type: mx.containers.HBox
              ,
              id: "hbxInfo"
              ,
              stylesFactory: function():void {
                this.paddingTop = 0;
                this.paddingBottom = 0;
              }
              ,
              propertiesFactory: function():Object { return {
                id: "hbxInfo",
                percentHeight: 100.0,
                percentWidth: 98.0,
                childDescriptors: [
                  new mx.core.UIComponentDescriptor({
                    type: mx.controls.Text
                    ,
                    id: "bFileInfo"
                    ,
                    propertiesFactory: function():Object { return {
                      id: "bFileInfo",
                      percentWidth: 100.0,
                      percentHeight: 100.0
                    }}
                  })
                ]
              }}
            })
          ]
        }}
      })
    ]
  }}
})

    /**
     * @private
     **/
    public function vUpload()
    {
        super();

        mx_internal::_document = this;

		var bindings:Array = _vUpload_bindingsSetup();
		var watchers:Array = [];

		var target:Object = this;

		if (_watcherSetupUtil == null)
		{
			var watcherSetupUtilClass:Object = getDefinitionByName("_vUploadWatcherSetupUtil");
			watcherSetupUtilClass["init"](null);
		}

		_watcherSetupUtil.setup(this,
					function(propertyName:String):* { return target[propertyName]; },
					function(propertyName:String):* { return vUpload[propertyName]; },
					bindings,
					watchers);

		mx_internal::_bindings = mx_internal::_bindings.concat(bindings);
		mx_internal::_watchers = mx_internal::_watchers.concat(watchers);


        // our style settings
		//	initialize component styles
		if (!this.styleDeclaration)
		{
			this.styleDeclaration = new CSSStyleDeclaration();
		}

		this.styleDeclaration.defaultFactory = function():void
		{
			this.verticalAlign = "middle";
			this.horizontalAlign = "center";
			this.paddingTop = 0;
			this.paddingLeft = 0;
			this.paddingRight = 0;
			this.paddingBottom = 0;
		};


        // ambient styles
        mx_internal::_vUpload_StylesInit();

        // layer initializers

       
        // properties
        this.layout = "vertical";
        this.height = 150;
        this.width = 400;


        // events


		for (var i:uint = 0; i < bindings.length; i++)
		{
			Binding(bindings[i]).execute();
		}

    }

    /**
     * @private
     **/
    override public function initialize():void
    {
        mx_internal::setDocumentDescriptor(_documentDescriptor_);


        super.initialize();
    }


include "./scripts/upload.as";



    //	supporting function definitions for properties, events, styles, effects
/**
 * @private
 **/
public function __bBrowse_click(event:flash.events.MouseEvent):void
{
	browseFiles();
}

/**
 * @private
 **/
public function __bUpload_click(event:flash.events.MouseEvent):void
{
	upload();
}


	//	binding mgmt
    private function _vUpload_bindingsSetup():Array
    {
        var result:Array = [];

        result[0] = new mx.binding.Binding(this,
            function():String
            {
                var result:* = (fileInfo);
                return (result == undefined ? null : String(result));
            },
            null,
            "bFileInfo.htmlText"
            );


        return result;
    }


    /**
     * @private
     **/
    public static function set watcherSetupUtil(watcherSetupUtil:IWatcherSetupUtil2):void
    {
        (vUpload)._watcherSetupUtil = watcherSetupUtil;
    }

    private static var _watcherSetupUtil:IWatcherSetupUtil2;


	mx_internal static var _vUpload_StylesInit_done:Boolean = false;

	mx_internal function _vUpload_StylesInit():void
	{
		//	only add our style defs to the StyleManager once
		if (mx_internal::_vUpload_StylesInit_done)
			return;
		else
			mx_internal::_vUpload_StylesInit_done = true;
			
			        var style:CSSStyleDeclaration;
			        var effects:Array;
        var conditions:Array;
        var condition:CSSCondition;
        var selector:CSSSelector;
        selector = null;
        conditions = null;
        conditions = null;
        selector = new CSSSelector("global", conditions, selector);
        // global
        style = StyleManager.getStyleDeclaration("global");
        if (!style)
        {
            style = new CSSStyleDeclaration(selector);
        }

        if (style.factory == null)
        {
            style.factory = function():void
            {
                this.horizontalAlign = "center";
                this.verticalAlign = "top";
                this.fontSize = 12;
            };
        }


        selector = null;
        conditions = null;
        conditions = null;
        selector = new CSSSelector("ToolTip", conditions, selector);
        // ToolTip
        style = StyleManager.getStyleDeclaration("ToolTip");
        if (!style)
        {
            style = new CSSStyleDeclaration(selector);
        }

        if (style.factory == null)
        {
            style.factory = function():void
            {
                this.fontSize = 12;
            };
        }



		StyleManager.mx_internal::initProtoChainRoots();
	}



    /**
     * @private
     **/
    mx_internal var _bindings : Array = [];
    /**
     * @private
     **/
    mx_internal var _watchers : Array = [];
    /**
     * @private
     **/
    mx_internal var _bindingsByDestination : Object = {};
    /**
     * @private
     **/
    mx_internal var _bindingsBeginWithWord : Object = {};

}

}
