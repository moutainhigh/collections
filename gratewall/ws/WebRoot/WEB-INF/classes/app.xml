<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="  
    http://www.springframework.org/schema/context  
    http://www.springframework.org/schema/context/spring-context.xsd  
    http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/tx  
    http://www.springframework.org/schema/tx/spring-tx.xsd  
    http://www.springframework.org/schema/jdbc  
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd  
    http://www.springframework.org/schema/cache  
    http://www.springframework.org/schema/cache/spring-cache.xsd  
    http://www.springframework.org/schema/aop  
    http://www.springframework.org/schema/aop/spring-aop.xsd  
    http://www.springframework.org/schema/util  
    http://www.springframework.org/schema/util/spring-util.xsd
     http://www.springframework.org/schema/task
     http://www.springframework.org/schema/task/spring-task.xsd">

	<!-- http://blog.csdn.net/geloin/article/details/7536968/ -->
	<!-- http://blog.csdn.net/zoutongyuan/article/details/41379851/ -->
	<!-- http://blog.csdn.net/gebitan505/article/details/44455235/ -->


	<!-- 加载配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:*.properties</value>
			</list>
		</property>
	</bean>

	<!-- http://blog.csdn.net/wangfayinn/article/details/24623575 -->
	<!-- 数据源配置, 使用 BoneCP 数据库连接池 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 数据源驱动类可不写，Druid默认会自动根据URL识别DriverClass -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />

		<!-- 基本属性 url、user、password -->
		<property name="url" value="jdbc:mysql://120.78.225.98:3306/stock?useUnicode=true" />
		<!-- <property name="url" value="jdbc:mysql:///stock?useUnicode=true"/> -->
		<property name="username" value="root" />
		<property name="password" value="015310qq" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="3" />
		<property name="minIdle" value="3" />
		<property name="maxActive" value="20" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="60000" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小（Oracle使用） <property name="poolPreparedStatements" 
			value="true" /> <property name="maxPoolPreparedStatementPerConnectionSize" 
			value="20" /> -->

		<!-- 配置监控统计拦截的filters -->
		<property name="filters" value="stat" />
	</bean>



	<!-- <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" 
		destroy-method="close">设置为close使Spring容器关闭同时数据源能够正常关闭，以免造成连接泄露 <property 
		name="driverClassName" value="com.mysql.jdbc.Driver" /> <property name="url" 
		value="jdbc:mysql:///stock" /> <property name="username" value="root" /> 
		<property name="password" value="015310qq" /> </bean> -->

	<context:component-scan base-package="com.ye.dao"></context:component-scan>
	<context:component-scan base-package="com.ye.monitor"></context:component-scan>
	<context:component-scan base-package="com.ye.service"></context:component-scan>
	<context:component-scan base-package="com.ye.bus"></context:component-scan>
	<context:component-scan base-package="com.sender.mail"></context:component-scan>

	<task:executor id="executor" pool-size="10" />
	<task:scheduler id="scheduler" pool-size="20" />
	<task:annotation-driven executor="executor"
		scheduler="scheduler" />

	<!-- http://bbs.csdn.net/topics/391875207 -->
	<!-- http://blog.csdn.net/u014284252/article/details/47186913 -->
	<!-- http://blog.csdn.net/z69183787/article/details/48946783?ref=myread -->
	<!-- http://blog.csdn.net/sky786905664/article/details/51801933 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置 -->
		<property name="typeAliasesPackage" value="com.bo.domain" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/bo/mapping/*.xml"></property>
		
		<!-- https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/HowToUse.md -->
		<!-- 配置分页插件 -->
		<property name="plugins">
		    <array>
		      <bean class="com.github.pagehelper.PageInterceptor">
		        <property name="properties">
		          <!--使用下面的方式配置参数，一行配置一个 -->
		          <value>
		            params=value1
		          </value>
		        </property>
		      </bean>
		    </array>
		  </property>
	</bean>


	<!-- https://www.cnblogs.com/daxin/p/3545040.html -->
	<!-- https://www.cnblogs.com/wangmingshun/p/5674633.html 三种整合方式 -->
	<!-- http://blog.csdn.net/fupengyao/article/details/51543195 -->
	<!-- http://blog.csdn.net/qq_28796345/article/details/53427134 -->
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ye.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>


	<!-- 正常股票开始 -->
	<!-- 正常股票的邮箱 -->
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${mail.host}</value>
		</property>
		<property name="port" value="${mail.port}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
		<property name="username">
			<value>${mail.username}</value>
		</property>
		<property name="password">
			<value>${mail.password}</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${mail.from}" />
		<property name="subject" value="${mail.subject}" />
		<!-- <property name="to" value="${mail.to}" /> -->
		<!-- <property name="text" value="邮件内容" /> -->
	</bean>


	<bean id="javaRateMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${mailrate.host}</value>
		</property>
		<property name="port" value="${mailrate.port}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
		<property name="username">
			<value>${mailrate.username}</value>
		</property>
		<property name="password">
			<value>${mailrate.password}</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<bean id="simpleRateMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${mailrate.from}" />
		<property name="subject" value="${mailrate.subject}" />
		<!-- <property name="to" value="${mail.to}" /> -->
		<!-- <property name="text" value="邮件内容" /> -->
	</bean>

	<!-- 正常股票结束 -->






	<!-- http://blog.csdn.net/zh921112/article/details/38397801 -->
	<!-- http://blog.csdn.net/adeyi/article/details/19421951 -->
	<!-- http://blog.csdn.net/houxuehan/article/details/52184736 -->
	<!-- https://www.baidu.com/s?ie=utf-8&f=8&rsv_bp=0&rsv_idx=1&tn=baidu&wd=javaMailProperties&rsv_pq=9e1974bf0004313e&rsv_t=9360qe0x%2BhxinRJG5VR5sYgNGCSpxLpyQ8vwlWytpXa%2BJ4aLQJGcTRJNbSM&rqlang=cn&rsv_enter=1&rsv_n=2&rsv_sug3=1 -->
	<!-- 短信股部分开始 -->
	<!-- 短信股的发送邮件的邮箱 -->
	<bean id="javaSMSMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${smsmail.host}</value>
		</property>
		<property name="port" value="${smsmail.port}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
		<property name="username">
			<value>${smsmail.username}</value>
		</property>
		<property name="password">
			<value>${smsmail.password}</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<bean id="simpleSMSMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${smsmail.from}" />
		<property name="subject" value="${smsmail.subject}" />
	</bean>



	<!-- 依据涨跌幅发送 -->
	<bean id="javaSMSRateMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host">
			<value>${smsratemail.host}</value>
		</property>
		<property name="port" value="${smsratemail.port}"></property>
		<property name="javaMailProperties">
			<props>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.timeout">25000</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
		<property name="username">
			<value>${smsratemail.username}</value>
		</property>
		<property name="password">
			<value>${smsratemail.password}</value>
		</property>
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>

	<bean id="simpleSMSRateMailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from" value="${smsratemail.from}" />
		<property name="subject" value="${smsratemail.subject}" />
	</bean>


	<!-- 短信股部分结束 -->





























	<!-- FreeMaker 发送新股与次新股以及自定义持仓股票盈亏数据的邮件开始 -->
	<!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> 
		<property name="ignoreUnresolvablePlaceholders" value="true" /> <property 
		name="locations"> <list> <value>classpath:mail.properties</value> </list> 
		</property> </bean> -->


	<!-- mail.host=smtp.qq.com mail.username=3575325778@qq.com mail.password=pedpwihkywhwdbbc 
		mail.ssl.enable=true #the setting for email server. mail.smtp.auth=true mail.smtp.timeout=25000 
		#mail.smtp.socketFactory.port=465 #mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory 
		mail.smtp.socketFactory.class=com.sun.mail.util.MailSSLSocketFactory mail.smtp.socketFactory.fallback=false -->

	<!-- https://zhidao.baidu.com/question/78798821.html -->
	<!-- <bean id="javaMailSenderFrm" class="org.springframework.mail.javamail.JavaMailSenderImpl"> 
		<property name="host" value="${mail.host}" /> <property name="username" value="${mail.username}" 
		/> <property name="password" value="${mail.password}" /> <property name="javaMailProperties"> 
		<props> <prop key="mail.smtp.auth">${mail.smtp.auth}</prop> <prop key="mail.smtp.ssl.enable">${mail.ssl.enable}</prop> 
		<prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop> <prop key="mail.smtp.socketFactory.class">${mail.smtp.socketFactory.class}</prop> 
		<prop key="mail.smtp.socketFactory.fallback">${mail.smtp.socketFactory.fallback}</prop> 
		</props> </property> </bean> -->

	<!-- <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop> 
		<prop key="mail.smtp.socketFactory.fallback">${mail.smtp.socketFactory.fallback}</prop> 
		<prop key="mail.smtp.port">465</prop> <prop key="mail.smtp.socketFactory.port">465</prop> 
		<prop key="mail.smtp.auth">${mail.smtp.auth}</prop> <prop key="mail.smtp.timeout">25000</prop> -->



	<!-- freemarker configuration -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean">
		<property name="preferFileSystemAccess" value="false" />
		<property name="freemarkerSettings">
			<props>
				<prop key="localized_lookup">false</prop>
				<prop key="template_update_delay">5</prop>
				<prop key="cache_storage">strong:20, soft:20</prop>
				<prop key="url_escaping_charset">UTF-8</prop>
				<prop key="output_encoding">UTF-8</prop>
			</props>
		</property>
		<!-- <property name="templateLoaderPath" value="classpath:/templates/" 
			/> -->
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="defaultEncoding" value="UTF-8" />
	</bean>

	<bean id="templateSendEmail" class="com.sender.mail.ftl.TemplateSendEmail">
		<property name="sender" ref="javaMailSender"></property>
		<property name="freemarkerConfiguration" ref="freemarkerConfiguration"></property>
		<property name="fromMail" value="${mail.username}"></property>
	</bean>

	<!-- FreeMaker 发送新股与次新股以及自定义持仓股票盈亏数据的邮件结束 -->



 <!-- 集成redis -->
 <import resource="spring-redis.xml"/> 
 <import resource="spring-targetprice.xml"/> 

	
</beans>